export type ListenStatus = 'keep-listening' | 'stop-listening';
export declare class EventEmitter<E extends object> {
    private listeners;
    emit<K extends keyof E>(type: K, event: E[K]): void;
    onceOrMore<K extends keyof E>(type: K, listener: (event: E[K]) => ListenStatus): void;
    once<K extends keyof E>(type: K, listener: (event: E[K]) => void): void;
    on<K extends keyof E>(type: K, listener: (event: E[K]) => void): void;
    off<K extends keyof E>(type: K, listener: (event: E[K]) => void): void;
    cleanup(): void;
}
