export interface GetConversationRequestHeaders {
    "x-user-key": string;
}
export interface GetConversationRequestQuery {
}
export interface GetConversationRequestParams {
    id: string;
}
export interface GetConversationRequestBody {
}
export type GetConversationInput = GetConversationRequestBody & GetConversationRequestHeaders & GetConversationRequestQuery & GetConversationRequestParams;
export type GetConversationRequest = {
    headers: GetConversationRequestHeaders;
    query: GetConversationRequestQuery;
    params: GetConversationRequestParams;
    body: GetConversationRequestBody;
};
export declare const parseReq: (input: GetConversationInput) => GetConversationRequest & {
    path: string;
};
export interface GetConversationResponse {
    conversation: {
        /**
         * Id of the [Conversation](#schema_conversation)
         */
        id: string;
        /**
         * Creation date of the [Conversation](#schema_conversation) in ISO 8601 format
         */
        createdAt: string;
        /**
         * Updating date of the [Conversation](#schema_conversation) in ISO 8601 format
         */
        updatedAt: string;
    };
}
