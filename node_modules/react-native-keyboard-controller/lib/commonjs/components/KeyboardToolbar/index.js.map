{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_bindings","_module","_useColorScheme","_interopRequireDefault","_KeyboardStickyView","_Arrow","_Button","_colors","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_extends","assign","bind","arguments","length","apply","TEST_ID_KEYBOARD_TOOLBAR","TEST_ID_KEYBOARD_TOOLBAR_PREVIOUS","TEST_ID_KEYBOARD_TOOLBAR_NEXT","TEST_ID_KEYBOARD_TOOLBAR_CONTENT","TEST_ID_KEYBOARD_TOOLBAR_DONE","KEYBOARD_TOOLBAR_HEIGHT","DEFAULT_OPACITY","KeyboardToolbar","content","theme","colors","doneText","button","icon","showArrows","onNextCallback","onPrevCallback","onDoneCallback","blur","opacity","offset","closed","opened","enabled","insets","rest","colorScheme","useColorScheme","inputs","setInputs","useState","current","count","isPrevDisabled","isNextDisabled","useEffect","subscription","FocusedInputEvents","addListener","remove","doneStyle","useMemo","styles","doneButton","color","primary","toolbarStyle","toolbar","backgroundColor","background","paddingLeft","left","paddingRight","right","ButtonContainer","Button","IconContainer","Arrow","onPressNext","useCallback","event","isDefaultPrevented","KeyboardController","setFocusTo","onPressPrev","onPressDone","dismiss","createElement","View","style","testID","arrows","accessibilityHint","accessibilityLabel","disabled","onPress","type","flex","rippleRadius","doneButtonContainer","Text","maxFontSizeMultiplier","StyleSheet","create","position","bottom","alignItems","width","flexDirection","height","fontWeight","fontSize","marginRight","marginLeft","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nimport { FocusedInputEvents } from \"../../bindings\";\nimport { KeyboardController } from \"../../module\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport KeyboardStickyView from \"../KeyboardStickyView\";\n\nimport Arrow from \"./Arrow\";\nimport Button from \"./Button\";\nimport { colors } from \"./colors\";\n\nimport type { HEX, KeyboardToolbarTheme } from \"./types\";\nimport type { KeyboardStickyViewProps } from \"../KeyboardStickyView\";\nimport type { ReactNode } from \"react\";\nimport type { GestureResponderEvent, ViewProps } from \"react-native\";\n\ntype SafeAreaInsets = {\n  left: number;\n  right: number;\n};\n\nexport type KeyboardToolbarProps = Omit<\n  ViewProps,\n  \"style\" | \"testID\" | \"children\"\n> & {\n  /** An element that is shown in the middle of the toolbar. */\n  content?: React.JSX.Element | null;\n  /** A set of dark/light colors consumed by toolbar component. */\n  theme?: KeyboardToolbarTheme;\n  /** Custom text for done button. */\n  doneText?: ReactNode;\n  /** Custom touchable component for toolbar (used for prev/next/done buttons). */\n  button?: typeof Button;\n  /** Custom icon component used to display next/prev buttons. */\n  icon?: typeof Arrow;\n  /**\n   * Whether to show next and previous buttons. Can be useful to set it to `false` if you have only one input\n   * and want to show only `Done` button. Default to `true`.\n   */\n  showArrows?: boolean;\n  /**\n   * A callback that is called when the user presses the next button along with the default action.\n   */\n  onNextCallback?: (event: GestureResponderEvent) => void;\n  /**\n   * A callback that is called when the user presses the previous button along with the default action.\n   */\n  onPrevCallback?: (event: GestureResponderEvent) => void;\n  /**\n   * A callback that is called when the user presses the done button along with the default action.\n   */\n  onDoneCallback?: (event: GestureResponderEvent) => void;\n  /**\n   * A component that applies blur effect to the toolbar.\n   */\n  blur?: React.JSX.Element | null;\n  /**\n   * A value for container opacity in hexadecimal format (e.g. `ff`). Default value is `ff`.\n   */\n  opacity?: HEX;\n  insets?: SafeAreaInsets;\n} & Pick<KeyboardStickyViewProps, \"offset\" | \"enabled\">;\n\nconst TEST_ID_KEYBOARD_TOOLBAR = \"keyboard.toolbar\";\nconst TEST_ID_KEYBOARD_TOOLBAR_PREVIOUS = `${TEST_ID_KEYBOARD_TOOLBAR}.previous`;\nconst TEST_ID_KEYBOARD_TOOLBAR_NEXT = `${TEST_ID_KEYBOARD_TOOLBAR}.next`;\nconst TEST_ID_KEYBOARD_TOOLBAR_CONTENT = `${TEST_ID_KEYBOARD_TOOLBAR}.content`;\nconst TEST_ID_KEYBOARD_TOOLBAR_DONE = `${TEST_ID_KEYBOARD_TOOLBAR}.done`;\n\nconst KEYBOARD_TOOLBAR_HEIGHT = 42;\nconst DEFAULT_OPACITY: HEX = \"FF\";\n\n/**\n * `KeyboardToolbar` is a component that is shown above the keyboard with `Prev`/`Next` and\n * `Done` buttons.\n */\nconst KeyboardToolbar: React.FC<KeyboardToolbarProps> = ({\n  content,\n  theme = colors,\n  doneText = \"Done\",\n  button,\n  icon,\n  showArrows = true,\n  onNextCallback,\n  onPrevCallback,\n  onDoneCallback,\n  blur = null,\n  opacity = DEFAULT_OPACITY,\n  offset: { closed = 0, opened = 0 } = {},\n  enabled = true,\n  insets,\n  ...rest\n}) => {\n  const colorScheme = useColorScheme();\n  const [inputs, setInputs] = useState({\n    current: 0,\n    count: 0,\n  });\n  const isPrevDisabled = inputs.current === 0;\n  const isNextDisabled = inputs.current === inputs.count - 1;\n\n  useEffect(() => {\n    const subscription = FocusedInputEvents.addListener(\"focusDidSet\", (e) => {\n      setInputs(e);\n    });\n\n    return subscription.remove;\n  }, []);\n  const doneStyle = useMemo(\n    () => [styles.doneButton, { color: theme[colorScheme].primary }],\n    [colorScheme, theme],\n  );\n  const toolbarStyle = useMemo(\n    () => [\n      styles.toolbar,\n      {\n        backgroundColor: `${theme[colorScheme].background}${opacity}`,\n      },\n      {\n        paddingLeft: insets?.left,\n        paddingRight: insets?.right,\n      },\n    ],\n    [colorScheme, opacity, theme, insets],\n  );\n  const offset = useMemo(\n    () => ({ closed: closed + KEYBOARD_TOOLBAR_HEIGHT, opened }),\n    [closed, opened],\n  );\n  const ButtonContainer = button || Button;\n  const IconContainer = icon || Arrow;\n\n  const onPressNext = useCallback(\n    (event: GestureResponderEvent) => {\n      onNextCallback?.(event);\n\n      if (!event.isDefaultPrevented()) {\n        KeyboardController.setFocusTo(\"next\");\n      }\n    },\n    [onNextCallback],\n  );\n  const onPressPrev = useCallback(\n    (event: GestureResponderEvent) => {\n      onPrevCallback?.(event);\n\n      if (!event.isDefaultPrevented()) {\n        KeyboardController.setFocusTo(\"prev\");\n      }\n    },\n    [onPrevCallback],\n  );\n  const onPressDone = useCallback(\n    (event: GestureResponderEvent) => {\n      onDoneCallback?.(event);\n\n      if (!event.isDefaultPrevented()) {\n        KeyboardController.dismiss();\n      }\n    },\n    [onDoneCallback],\n  );\n\n  return (\n    <KeyboardStickyView enabled={enabled} offset={offset}>\n      <View {...rest} style={toolbarStyle} testID={TEST_ID_KEYBOARD_TOOLBAR}>\n        {blur}\n        {showArrows && (\n          <View style={styles.arrows}>\n            <ButtonContainer\n              accessibilityHint=\"Moves focus to the previous field\"\n              accessibilityLabel=\"Previous\"\n              disabled={isPrevDisabled}\n              testID={TEST_ID_KEYBOARD_TOOLBAR_PREVIOUS}\n              theme={theme}\n              onPress={onPressPrev}\n            >\n              <IconContainer\n                disabled={isPrevDisabled}\n                theme={theme}\n                type=\"prev\"\n              />\n            </ButtonContainer>\n            <ButtonContainer\n              accessibilityHint=\"Moves focus to the next field\"\n              accessibilityLabel=\"Next\"\n              disabled={isNextDisabled}\n              testID={TEST_ID_KEYBOARD_TOOLBAR_NEXT}\n              theme={theme}\n              onPress={onPressNext}\n            >\n              <IconContainer\n                disabled={isNextDisabled}\n                theme={theme}\n                type=\"next\"\n              />\n            </ButtonContainer>\n          </View>\n        )}\n\n        <View style={styles.flex} testID={TEST_ID_KEYBOARD_TOOLBAR_CONTENT}>\n          {content}\n        </View>\n        {doneText && (\n          <ButtonContainer\n            accessibilityHint=\"Closes the keyboard\"\n            accessibilityLabel=\"Done\"\n            rippleRadius={28}\n            style={styles.doneButtonContainer}\n            testID={TEST_ID_KEYBOARD_TOOLBAR_DONE}\n            theme={theme}\n            onPress={onPressDone}\n          >\n            <Text maxFontSizeMultiplier={1.3} style={doneStyle}>\n              {doneText}\n            </Text>\n          </ButtonContainer>\n        )}\n      </View>\n    </KeyboardStickyView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  flex: {\n    flex: 1,\n  },\n  toolbar: {\n    position: \"absolute\",\n    bottom: 0,\n    alignItems: \"center\",\n    width: \"100%\",\n    flexDirection: \"row\",\n    height: KEYBOARD_TOOLBAR_HEIGHT,\n  },\n  arrows: {\n    flexDirection: \"row\",\n    paddingLeft: 8,\n  },\n  doneButton: {\n    fontWeight: \"600\",\n    fontSize: 15,\n  },\n  doneButtonContainer: {\n    marginRight: 16,\n    marginLeft: 8,\n  },\n});\n\nexport { colors as DefaultKeyboardToolbarTheme };\nexport default KeyboardToolbar;\n"],"mappings":"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","ignoreList":[]}