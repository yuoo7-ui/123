import type { MessageCreated } from './messageCreated.t';
import type { WebchatVisibility } from './webchatVisibility.t';
import type { WebchatConfig } from './webchatConfig.t';
import type { Custom } from './custom.t';
import type { TypingStarted } from './typingStarted.t';
import type { TypingStopped } from './typingStopped.t';
export declare const json: {};
export declare const zod: {
    messageCreated: import("zod").ZodObject<{
        type: import("zod").ZodLiteral<"message_created">;
        data: import("zod").ZodObject<{
            id: import("zod").ZodString;
            createdAt: import("zod").ZodString;
            payload: import("zod").ZodUnion<[import("zod").ZodObject<{
                audioUrl: import("zod").ZodString;
                type: import("zod").ZodLiteral<"audio">;
            }, "strip", import("zod").ZodTypeAny, {
                type: "audio";
                audioUrl: string;
            }, {
                type: "audio";
                audioUrl: string;
            }>, import("zod").ZodObject<{
                title: import("zod").ZodString;
                subtitle: import("zod").ZodOptional<import("zod").ZodString>;
                imageUrl: import("zod").ZodOptional<import("zod").ZodString>;
                actions: import("zod").ZodArray<import("zod").ZodObject<{
                    action: import("zod").ZodEnum<["postback", "url", "say"]>;
                    label: import("zod").ZodString;
                    value: import("zod").ZodString;
                }, "strip", import("zod").ZodTypeAny, {
                    action: "postback" | "url" | "say";
                    label: string;
                    value: string;
                }, {
                    action: "postback" | "url" | "say";
                    label: string;
                    value: string;
                }>, "many">;
                type: import("zod").ZodLiteral<"card">;
            }, "strip", import("zod").ZodTypeAny, {
                type: "card";
                title: string;
                actions: {
                    action: "postback" | "url" | "say";
                    label: string;
                    value: string;
                }[];
                subtitle?: string | undefined;
                imageUrl?: string | undefined;
            }, {
                type: "card";
                title: string;
                actions: {
                    action: "postback" | "url" | "say";
                    label: string;
                    value: string;
                }[];
                subtitle?: string | undefined;
                imageUrl?: string | undefined;
            }>, import("zod").ZodObject<{
                items: import("zod").ZodArray<import("zod").ZodObject<{
                    title: import("zod").ZodString;
                    subtitle: import("zod").ZodOptional<import("zod").ZodString>;
                    imageUrl: import("zod").ZodOptional<import("zod").ZodString>;
                    actions: import("zod").ZodArray<import("zod").ZodObject<{
                        action: import("zod").ZodEnum<["postback", "url", "say"]>;
                        label: import("zod").ZodString;
                        value: import("zod").ZodString;
                    }, "strip", import("zod").ZodTypeAny, {
                        action: "postback" | "url" | "say";
                        label: string;
                        value: string;
                    }, {
                        action: "postback" | "url" | "say";
                        label: string;
                        value: string;
                    }>, "many">;
                }, "strip", import("zod").ZodTypeAny, {
                    title: string;
                    actions: {
                        action: "postback" | "url" | "say";
                        label: string;
                        value: string;
                    }[];
                    subtitle?: string | undefined;
                    imageUrl?: string | undefined;
                }, {
                    title: string;
                    actions: {
                        action: "postback" | "url" | "say";
                        label: string;
                        value: string;
                    }[];
                    subtitle?: string | undefined;
                    imageUrl?: string | undefined;
                }>, "many">;
                type: import("zod").ZodLiteral<"carousel">;
            }, "strip", import("zod").ZodTypeAny, {
                type: "carousel";
                items: {
                    title: string;
                    actions: {
                        action: "postback" | "url" | "say";
                        label: string;
                        value: string;
                    }[];
                    subtitle?: string | undefined;
                    imageUrl?: string | undefined;
                }[];
            }, {
                type: "carousel";
                items: {
                    title: string;
                    actions: {
                        action: "postback" | "url" | "say";
                        label: string;
                        value: string;
                    }[];
                    subtitle?: string | undefined;
                    imageUrl?: string | undefined;
                }[];
            }>, import("zod").ZodObject<{
                text: import("zod").ZodString;
                options: import("zod").ZodArray<import("zod").ZodObject<{
                    label: import("zod").ZodString;
                    value: import("zod").ZodString;
                }, "strip", import("zod").ZodTypeAny, {
                    label: string;
                    value: string;
                }, {
                    label: string;
                    value: string;
                }>, "many">;
                type: import("zod").ZodLiteral<"choice">;
                disableFreeText: import("zod").ZodOptional<import("zod").ZodBoolean>;
            }, "strip", import("zod").ZodTypeAny, {
                type: "choice";
                text: string;
                options: {
                    label: string;
                    value: string;
                }[];
                disableFreeText?: boolean | undefined;
            }, {
                type: "choice";
                text: string;
                options: {
                    label: string;
                    value: string;
                }[];
                disableFreeText?: boolean | undefined;
            }>, import("zod").ZodObject<{
                text: import("zod").ZodString;
                options: import("zod").ZodArray<import("zod").ZodObject<{
                    label: import("zod").ZodString;
                    value: import("zod").ZodString;
                }, "strip", import("zod").ZodTypeAny, {
                    label: string;
                    value: string;
                }, {
                    label: string;
                    value: string;
                }>, "many">;
                type: import("zod").ZodLiteral<"dropdown">;
            }, "strip", import("zod").ZodTypeAny, {
                type: "dropdown";
                text: string;
                options: {
                    label: string;
                    value: string;
                }[];
            }, {
                type: "dropdown";
                text: string;
                options: {
                    label: string;
                    value: string;
                }[];
            }>, import("zod").ZodObject<{
                fileUrl: import("zod").ZodString;
                title: import("zod").ZodOptional<import("zod").ZodString>;
                type: import("zod").ZodLiteral<"file">;
            }, "strip", import("zod").ZodTypeAny, {
                type: "file";
                fileUrl: string;
                title?: string | undefined;
            }, {
                type: "file";
                fileUrl: string;
                title?: string | undefined;
            }>, import("zod").ZodObject<{
                imageUrl: import("zod").ZodString;
                type: import("zod").ZodLiteral<"image">;
            }, "strip", import("zod").ZodTypeAny, {
                type: "image";
                imageUrl: string;
            }, {
                type: "image";
                imageUrl: string;
            }>, import("zod").ZodObject<{
                latitude: import("zod").ZodNumber;
                longitude: import("zod").ZodNumber;
                address: import("zod").ZodOptional<import("zod").ZodString>;
                title: import("zod").ZodOptional<import("zod").ZodString>;
                type: import("zod").ZodLiteral<"location">;
            }, "strip", import("zod").ZodTypeAny, {
                type: "location";
                latitude: number;
                longitude: number;
                address?: string | undefined;
                title?: string | undefined;
            }, {
                type: "location";
                latitude: number;
                longitude: number;
                address?: string | undefined;
                title?: string | undefined;
            }>, import("zod").ZodObject<{
                markdown: import("zod").ZodString;
                type: import("zod").ZodLiteral<"markdown">;
            }, "strip", import("zod").ZodTypeAny, {
                type: "markdown";
                markdown: string;
            }, {
                type: "markdown";
                markdown: string;
            }>, import("zod").ZodObject<{
                text: import("zod").ZodString;
                type: import("zod").ZodLiteral<"text">;
            }, "strip", import("zod").ZodTypeAny, {
                type: "text";
                text: string;
            }, {
                type: "text";
                text: string;
            }>, import("zod").ZodObject<{
                videoUrl: import("zod").ZodString;
                type: import("zod").ZodLiteral<"video">;
            }, "strip", import("zod").ZodTypeAny, {
                type: "video";
                videoUrl: string;
            }, {
                type: "video";
                videoUrl: string;
            }>, import("zod").ZodObject<{
                items: import("zod").ZodArray<import("zod").ZodUnion<[import("zod").ZodObject<{
                    type: import("zod").ZodLiteral<"text">;
                    payload: import("zod").ZodObject<{
                        text: import("zod").ZodString;
                    }, "strip", import("zod").ZodTypeAny, {
                        text: string;
                    }, {
                        text: string;
                    }>;
                }, "strip", import("zod").ZodTypeAny, {
                    type: "text";
                    payload: {
                        text: string;
                    };
                }, {
                    type: "text";
                    payload: {
                        text: string;
                    };
                }>, import("zod").ZodObject<{
                    type: import("zod").ZodLiteral<"markdown">;
                    payload: import("zod").ZodObject<{
                        markdown: import("zod").ZodString;
                    }, "strip", import("zod").ZodTypeAny, {
                        markdown: string;
                    }, {
                        markdown: string;
                    }>;
                }, "strip", import("zod").ZodTypeAny, {
                    type: "markdown";
                    payload: {
                        markdown: string;
                    };
                }, {
                    type: "markdown";
                    payload: {
                        markdown: string;
                    };
                }>, import("zod").ZodObject<{
                    type: import("zod").ZodLiteral<"image">;
                    payload: import("zod").ZodObject<{
                        imageUrl: import("zod").ZodString;
                    }, "strip", import("zod").ZodTypeAny, {
                        imageUrl: string;
                    }, {
                        imageUrl: string;
                    }>;
                }, "strip", import("zod").ZodTypeAny, {
                    type: "image";
                    payload: {
                        imageUrl: string;
                    };
                }, {
                    type: "image";
                    payload: {
                        imageUrl: string;
                    };
                }>, import("zod").ZodObject<{
                    type: import("zod").ZodLiteral<"audio">;
                    payload: import("zod").ZodObject<{
                        audioUrl: import("zod").ZodString;
                    }, "strip", import("zod").ZodTypeAny, {
                        audioUrl: string;
                    }, {
                        audioUrl: string;
                    }>;
                }, "strip", import("zod").ZodTypeAny, {
                    type: "audio";
                    payload: {
                        audioUrl: string;
                    };
                }, {
                    type: "audio";
                    payload: {
                        audioUrl: string;
                    };
                }>, import("zod").ZodObject<{
                    type: import("zod").ZodLiteral<"video">;
                    payload: import("zod").ZodObject<{
                        videoUrl: import("zod").ZodString;
                    }, "strip", import("zod").ZodTypeAny, {
                        videoUrl: string;
                    }, {
                        videoUrl: string;
                    }>;
                }, "strip", import("zod").ZodTypeAny, {
                    type: "video";
                    payload: {
                        videoUrl: string;
                    };
                }, {
                    type: "video";
                    payload: {
                        videoUrl: string;
                    };
                }>, import("zod").ZodObject<{
                    type: import("zod").ZodLiteral<"file">;
                    payload: import("zod").ZodObject<{
                        fileUrl: import("zod").ZodString;
                        title: import("zod").ZodOptional<import("zod").ZodString>;
                    }, "strip", import("zod").ZodTypeAny, {
                        fileUrl: string;
                        title?: string | undefined;
                    }, {
                        fileUrl: string;
                        title?: string | undefined;
                    }>;
                }, "strip", import("zod").ZodTypeAny, {
                    type: "file";
                    payload: {
                        fileUrl: string;
                        title?: string | undefined;
                    };
                }, {
                    type: "file";
                    payload: {
                        fileUrl: string;
                        title?: string | undefined;
                    };
                }>, import("zod").ZodObject<{
                    type: import("zod").ZodLiteral<"location">;
                    payload: import("zod").ZodObject<{
                        latitude: import("zod").ZodNumber;
                        longitude: import("zod").ZodNumber;
                        address: import("zod").ZodOptional<import("zod").ZodString>;
                        title: import("zod").ZodOptional<import("zod").ZodString>;
                    }, "strip", import("zod").ZodTypeAny, {
                        latitude: number;
                        longitude: number;
                        address?: string | undefined;
                        title?: string | undefined;
                    }, {
                        latitude: number;
                        longitude: number;
                        address?: string | undefined;
                        title?: string | undefined;
                    }>;
                }, "strip", import("zod").ZodTypeAny, {
                    type: "location";
                    payload: {
                        latitude: number;
                        longitude: number;
                        address?: string | undefined;
                        title?: string | undefined;
                    };
                }, {
                    type: "location";
                    payload: {
                        latitude: number;
                        longitude: number;
                        address?: string | undefined;
                        title?: string | undefined;
                    };
                }>]>, "many">;
                type: import("zod").ZodLiteral<"bloc">;
            }, "strip", import("zod").ZodTypeAny, {
                type: "bloc";
                items: ({
                    type: "text";
                    payload: {
                        text: string;
                    };
                } | {
                    type: "markdown";
                    payload: {
                        markdown: string;
                    };
                } | {
                    type: "image";
                    payload: {
                        imageUrl: string;
                    };
                } | {
                    type: "audio";
                    payload: {
                        audioUrl: string;
                    };
                } | {
                    type: "video";
                    payload: {
                        videoUrl: string;
                    };
                } | {
                    type: "file";
                    payload: {
                        fileUrl: string;
                        title?: string | undefined;
                    };
                } | {
                    type: "location";
                    payload: {
                        latitude: number;
                        longitude: number;
                        address?: string | undefined;
                        title?: string | undefined;
                    };
                })[];
            }, {
                type: "bloc";
                items: ({
                    type: "text";
                    payload: {
                        text: string;
                    };
                } | {
                    type: "markdown";
                    payload: {
                        markdown: string;
                    };
                } | {
                    type: "image";
                    payload: {
                        imageUrl: string;
                    };
                } | {
                    type: "audio";
                    payload: {
                        audioUrl: string;
                    };
                } | {
                    type: "video";
                    payload: {
                        videoUrl: string;
                    };
                } | {
                    type: "file";
                    payload: {
                        fileUrl: string;
                        title?: string | undefined;
                    };
                } | {
                    type: "location";
                    payload: {
                        latitude: number;
                        longitude: number;
                        address?: string | undefined;
                        title?: string | undefined;
                    };
                })[];
            }>]>;
            userId: import("zod").ZodString;
            conversationId: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            payload: {
                type: "audio";
                audioUrl: string;
            } | {
                type: "card";
                title: string;
                actions: {
                    action: "postback" | "url" | "say";
                    label: string;
                    value: string;
                }[];
                subtitle?: string | undefined;
                imageUrl?: string | undefined;
            } | {
                type: "carousel";
                items: {
                    title: string;
                    actions: {
                        action: "postback" | "url" | "say";
                        label: string;
                        value: string;
                    }[];
                    subtitle?: string | undefined;
                    imageUrl?: string | undefined;
                }[];
            } | {
                type: "choice";
                text: string;
                options: {
                    label: string;
                    value: string;
                }[];
                disableFreeText?: boolean | undefined;
            } | {
                type: "dropdown";
                text: string;
                options: {
                    label: string;
                    value: string;
                }[];
            } | {
                type: "file";
                fileUrl: string;
                title?: string | undefined;
            } | {
                type: "image";
                imageUrl: string;
            } | {
                type: "location";
                latitude: number;
                longitude: number;
                address?: string | undefined;
                title?: string | undefined;
            } | {
                type: "markdown";
                markdown: string;
            } | {
                type: "text";
                text: string;
            } | {
                type: "video";
                videoUrl: string;
            } | {
                type: "bloc";
                items: ({
                    type: "text";
                    payload: {
                        text: string;
                    };
                } | {
                    type: "markdown";
                    payload: {
                        markdown: string;
                    };
                } | {
                    type: "image";
                    payload: {
                        imageUrl: string;
                    };
                } | {
                    type: "audio";
                    payload: {
                        audioUrl: string;
                    };
                } | {
                    type: "video";
                    payload: {
                        videoUrl: string;
                    };
                } | {
                    type: "file";
                    payload: {
                        fileUrl: string;
                        title?: string | undefined;
                    };
                } | {
                    type: "location";
                    payload: {
                        latitude: number;
                        longitude: number;
                        address?: string | undefined;
                        title?: string | undefined;
                    };
                })[];
            };
            id: string;
            userId: string;
            conversationId: string;
            createdAt: string;
        }, {
            payload: {
                type: "audio";
                audioUrl: string;
            } | {
                type: "card";
                title: string;
                actions: {
                    action: "postback" | "url" | "say";
                    label: string;
                    value: string;
                }[];
                subtitle?: string | undefined;
                imageUrl?: string | undefined;
            } | {
                type: "carousel";
                items: {
                    title: string;
                    actions: {
                        action: "postback" | "url" | "say";
                        label: string;
                        value: string;
                    }[];
                    subtitle?: string | undefined;
                    imageUrl?: string | undefined;
                }[];
            } | {
                type: "choice";
                text: string;
                options: {
                    label: string;
                    value: string;
                }[];
                disableFreeText?: boolean | undefined;
            } | {
                type: "dropdown";
                text: string;
                options: {
                    label: string;
                    value: string;
                }[];
            } | {
                type: "file";
                fileUrl: string;
                title?: string | undefined;
            } | {
                type: "image";
                imageUrl: string;
            } | {
                type: "location";
                latitude: number;
                longitude: number;
                address?: string | undefined;
                title?: string | undefined;
            } | {
                type: "markdown";
                markdown: string;
            } | {
                type: "text";
                text: string;
            } | {
                type: "video";
                videoUrl: string;
            } | {
                type: "bloc";
                items: ({
                    type: "text";
                    payload: {
                        text: string;
                    };
                } | {
                    type: "markdown";
                    payload: {
                        markdown: string;
                    };
                } | {
                    type: "image";
                    payload: {
                        imageUrl: string;
                    };
                } | {
                    type: "audio";
                    payload: {
                        audioUrl: string;
                    };
                } | {
                    type: "video";
                    payload: {
                        videoUrl: string;
                    };
                } | {
                    type: "file";
                    payload: {
                        fileUrl: string;
                        title?: string | undefined;
                    };
                } | {
                    type: "location";
                    payload: {
                        latitude: number;
                        longitude: number;
                        address?: string | undefined;
                        title?: string | undefined;
                    };
                })[];
            };
            id: string;
            userId: string;
            conversationId: string;
            createdAt: string;
        }>;
    }, "strip", import("zod").ZodTypeAny, {
        type: "message_created";
        data: {
            payload: {
                type: "audio";
                audioUrl: string;
            } | {
                type: "card";
                title: string;
                actions: {
                    action: "postback" | "url" | "say";
                    label: string;
                    value: string;
                }[];
                subtitle?: string | undefined;
                imageUrl?: string | undefined;
            } | {
                type: "carousel";
                items: {
                    title: string;
                    actions: {
                        action: "postback" | "url" | "say";
                        label: string;
                        value: string;
                    }[];
                    subtitle?: string | undefined;
                    imageUrl?: string | undefined;
                }[];
            } | {
                type: "choice";
                text: string;
                options: {
                    label: string;
                    value: string;
                }[];
                disableFreeText?: boolean | undefined;
            } | {
                type: "dropdown";
                text: string;
                options: {
                    label: string;
                    value: string;
                }[];
            } | {
                type: "file";
                fileUrl: string;
                title?: string | undefined;
            } | {
                type: "image";
                imageUrl: string;
            } | {
                type: "location";
                latitude: number;
                longitude: number;
                address?: string | undefined;
                title?: string | undefined;
            } | {
                type: "markdown";
                markdown: string;
            } | {
                type: "text";
                text: string;
            } | {
                type: "video";
                videoUrl: string;
            } | {
                type: "bloc";
                items: ({
                    type: "text";
                    payload: {
                        text: string;
                    };
                } | {
                    type: "markdown";
                    payload: {
                        markdown: string;
                    };
                } | {
                    type: "image";
                    payload: {
                        imageUrl: string;
                    };
                } | {
                    type: "audio";
                    payload: {
                        audioUrl: string;
                    };
                } | {
                    type: "video";
                    payload: {
                        videoUrl: string;
                    };
                } | {
                    type: "file";
                    payload: {
                        fileUrl: string;
                        title?: string | undefined;
                    };
                } | {
                    type: "location";
                    payload: {
                        latitude: number;
                        longitude: number;
                        address?: string | undefined;
                        title?: string | undefined;
                    };
                })[];
            };
            id: string;
            userId: string;
            conversationId: string;
            createdAt: string;
        };
    }, {
        type: "message_created";
        data: {
            payload: {
                type: "audio";
                audioUrl: string;
            } | {
                type: "card";
                title: string;
                actions: {
                    action: "postback" | "url" | "say";
                    label: string;
                    value: string;
                }[];
                subtitle?: string | undefined;
                imageUrl?: string | undefined;
            } | {
                type: "carousel";
                items: {
                    title: string;
                    actions: {
                        action: "postback" | "url" | "say";
                        label: string;
                        value: string;
                    }[];
                    subtitle?: string | undefined;
                    imageUrl?: string | undefined;
                }[];
            } | {
                type: "choice";
                text: string;
                options: {
                    label: string;
                    value: string;
                }[];
                disableFreeText?: boolean | undefined;
            } | {
                type: "dropdown";
                text: string;
                options: {
                    label: string;
                    value: string;
                }[];
            } | {
                type: "file";
                fileUrl: string;
                title?: string | undefined;
            } | {
                type: "image";
                imageUrl: string;
            } | {
                type: "location";
                latitude: number;
                longitude: number;
                address?: string | undefined;
                title?: string | undefined;
            } | {
                type: "markdown";
                markdown: string;
            } | {
                type: "text";
                text: string;
            } | {
                type: "video";
                videoUrl: string;
            } | {
                type: "bloc";
                items: ({
                    type: "text";
                    payload: {
                        text: string;
                    };
                } | {
                    type: "markdown";
                    payload: {
                        markdown: string;
                    };
                } | {
                    type: "image";
                    payload: {
                        imageUrl: string;
                    };
                } | {
                    type: "audio";
                    payload: {
                        audioUrl: string;
                    };
                } | {
                    type: "video";
                    payload: {
                        videoUrl: string;
                    };
                } | {
                    type: "file";
                    payload: {
                        fileUrl: string;
                        title?: string | undefined;
                    };
                } | {
                    type: "location";
                    payload: {
                        latitude: number;
                        longitude: number;
                        address?: string | undefined;
                        title?: string | undefined;
                    };
                })[];
            };
            id: string;
            userId: string;
            conversationId: string;
            createdAt: string;
        };
    }>;
    webchatVisibility: import("zod").ZodObject<{
        type: import("zod").ZodLiteral<"webchat_visibility">;
        data: import("zod").ZodObject<{
            visibility: import("zod").ZodUnion<[import("zod").ZodLiteral<"show">, import("zod").ZodLiteral<"hide">, import("zod").ZodLiteral<"toggle">]>;
        }, "strip", import("zod").ZodTypeAny, {
            visibility: "show" | "hide" | "toggle";
        }, {
            visibility: "show" | "hide" | "toggle";
        }>;
    }, "strip", import("zod").ZodTypeAny, {
        type: "webchat_visibility";
        data: {
            visibility: "show" | "hide" | "toggle";
        };
    }, {
        type: "webchat_visibility";
        data: {
            visibility: "show" | "hide" | "toggle";
        };
    }>;
    webchatConfig: import("zod").ZodObject<{
        type: import("zod").ZodLiteral<"webchat_config">;
        data: import("zod").ZodObject<{
            config: import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodUnion<[import("zod").ZodAny, import("zod").ZodNull]>>;
        }, "strip", import("zod").ZodTypeAny, {
            config: Record<string, any>;
        }, {
            config: Record<string, any>;
        }>;
    }, "strip", import("zod").ZodTypeAny, {
        type: "webchat_config";
        data: {
            config: Record<string, any>;
        };
    }, {
        type: "webchat_config";
        data: {
            config: Record<string, any>;
        };
    }>;
    custom: import("zod").ZodObject<{
        type: import("zod").ZodLiteral<"custom">;
        data: import("zod").ZodObject<{
            event: import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodUnion<[import("zod").ZodAny, import("zod").ZodNull]>>;
        }, "strip", import("zod").ZodTypeAny, {
            event: Record<string, any>;
        }, {
            event: Record<string, any>;
        }>;
    }, "strip", import("zod").ZodTypeAny, {
        type: "custom";
        data: {
            event: Record<string, any>;
        };
    }, {
        type: "custom";
        data: {
            event: Record<string, any>;
        };
    }>;
    typingStarted: import("zod").ZodObject<{
        type: import("zod").ZodLiteral<"typing_started">;
        data: import("zod").ZodObject<{
            timeout: import("zod").ZodOptional<import("zod").ZodNumber>;
        }, "strip", import("zod").ZodTypeAny, {
            timeout?: number | undefined;
        }, {
            timeout?: number | undefined;
        }>;
    }, "strip", import("zod").ZodTypeAny, {
        type: "typing_started";
        data: {
            timeout?: number | undefined;
        };
    }, {
        type: "typing_started";
        data: {
            timeout?: number | undefined;
        };
    }>;
    typingStopped: import("zod").ZodObject<{
        type: import("zod").ZodLiteral<"typing_stopped">;
        data: import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodNever>;
    }, "strip", import("zod").ZodTypeAny, {
        type: "typing_stopped";
        data: Record<string, never>;
    }, {
        type: "typing_stopped";
        data: Record<string, never>;
    }>;
};
export type Types = {
    messageCreated: MessageCreated;
    webchatVisibility: WebchatVisibility;
    webchatConfig: WebchatConfig;
    custom: Custom;
    typingStarted: TypingStarted;
    typingStopped: TypingStopped;
};
